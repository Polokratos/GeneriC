grammar par;

program : FUNCTION* EOF;

FUNCTION : HEAD BODY;

HEAD : RETURN NAME TYPE_PARAMETERS? '(' ARGS ')';

RETURN : TYPE_IDENTIFIER;
NAME : IDENTIFIER;

TYPE_PARAMETERS : '<' TYPE_PARAMS '>';
TYPE_PARAMS : TYPE_IDENTIFIER | TYPE_IDENTIFIER ',' TYPE_PARAMS;

ARGS : IDENTIFIER | IDENTIFIER ',' ARGS;

BODY: '{' STATEMENT+ '}';
STATEMENT : RETURN_S | ASSIGN_S | INIT_S;

RETURN_S : 'return' ';' | 'return' IDENTIFIER ';';
ASSIGN_S : IDENTIFIER '=' IDENTIFIER ';';

INIT_S : TYPE_IDENTIFIER IDENTIFIER ';'; // int x;

TYPE_IDENTIFIER : [a-zA-Z*]+;
IDENTIFIER : [a-zA-Z]+;
WS: [\r\t\n] -> skip;